{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Transform" : "AWS::Serverless-2016-10-31",
	"Description" : "An AWS Serverless Application that uses the ASP.NET Core framework running in Amazon Lambda.",

	"Parameters" : {
		"ShouldCreateBucket" : {
			"Type" : "String",
			"AllowedValues" : ["true", "false"],
			"Description" : "If true then the S3 bucket that will be proxied will be created with the CloudFormation stack."
		},  
		"BucketName" : {
			"Type" : "String",
			"Description" : "Name of S3 bucket that will be proxied. If left blank a name will be generated.",
			"MinLength" : "0"
		},
		"TableName": {
            "Type": "String",
            "Default": "WebConnection",
            "Description": "(Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters",
            "MinLength": 3,
            "MaxLength": 50
        },
		"FCAVersion": {
            "Type": "String",
            "Default": "FCAVersion",
            "Description": "(Required) The name of the new DynamoDB to store version application."
        }
	},

	"Conditions" : {
		"CreateS3Bucket" : {"Fn::Equals" : [{"Ref" : "ShouldCreateBucket"}, "true"]},
		"BucketNameGenerated" : {"Fn::Equals" : [{"Ref" : "BucketName"}, ""]}
	},

	"Resources" : {
			"AspNetCoreFunction" : {
				"Type" : "AWS::Serverless::Function",
				"Properties": {
				"Handler": "FCA.API::FCA.API.LambdaEntryPoint::FunctionHandlerAsync",
				"Runtime": "dotnetcore2.1",
				"CodeUri": "",
				"MemorySize": 256,
				"Timeout": 30,
				"Role": null,
				"Policies": [ "AWSLambdaFullAccess" ],
				"Environment" : {
					"Variables" : {
						"AppS3Bucket" : { "Fn::If" : ["CreateS3Bucket", {"Ref":"Bucket"}, { "Ref" : "BucketName" } ] }
					}
				},
				"Events": {
					"ProxyResource": {
						"Type": "Api",
						"Properties": {
							"Path": "/{proxy+}",
							"Method": "ANY"
						}
					},
					"RootResource": {
						"Type": "Api",
						"Properties": {
							"Path": "/",
							"Method": "ANY"
						}
					}
				}
			}
		},
		"Bucket" : {
			"Type" : "AWS::S3::Bucket",
			"Condition" : "CreateS3Bucket",
			"Properties" : {
				"BucketName" : { "Fn::If" : ["BucketNameGenerated", {"Ref" : "AWS::NoValue" }, { "Ref" : "BucketName" } ] }
			}
		},
		"FCAWebSocket": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
                "Name": "FCAWebSocket",
                "ProtocolType": "WEBSOCKET",
                "RouteSelectionExpression": "$request.body.action"
            }
        },
		"FCAAuthorizerFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "",
                "Handler": "FCA.API::FCAWS.Author::FunctionHandler",
                "MemorySize": 256,
				"Timeout": 30,
                "Runtime": "dotnetcore2.1",
				"Environment":{
					"Variables":{
						"CognitoIssuer": "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_QPPfSKreN",
						"CognitoAudience": "pt57be8gffvg40nuhntee1k3a",
						"CognitoTokenUse": "id",
						"Kid1": "+o+Bniqg5wsp8Xyk1B1CVW7W2nCpWWna/CK6ZAAK0eU=",
						"E1": "AQAB",
						"N1": "hVKyZCeAZAeAdOeLnz5tFJH91mZk_kypEt0KzTp9PXP-GdqDxiKh4YvMWMNyyzuhzhGcpQxvG3Vg8PF6ReCyWYM2ROJYKElNaEiocuTsK99QTC37TJR-U5HQPT4tolJts7tOAf8sFa0AwpD9WiepOtAhk2mj3OMa-WEa3YxpK2ucmoPHWNyeZxjFskqq72Zvyuf8BcXmPjsv4agNyi9Yl0FV8EqQyzWVrAasFBpdpzkJre98jkXbofyfPB9fRLmr65e9CAWCUdWQ0H4bZc5DC2-exF09laWnCRx_UNd3ZE_5T2q9OSsb7tc1k33jnMw59Zi4nKKGyMDSSSixT1HonQ",
						"Kid2": "mwpBgLy7t+he432sb5TQGYL8MXwuYM1aYT6IYQuNrKg=",
						"E2": "AQAB",
						"N2": "o_pfAb51h2uYGSkyjgArQX7dyECCoXOQBjaRmXoe4pM-F3Tg7Mf5QOImqusLqMMzrz8JPZsGN7WOaaGgbGplboA0VL86L1d7T5cllRZFAq9FArIq0ED_1l8IxGGWELvSaTfflYL-GyRfgxExzgXepBZP7CIAlBYyzavxMt_O6PXPFPrqs9aX6Mr-t6IQgBqOGfRlAVN9BU8z-6Wh-w_gW1D7aYkvgMWle2E_Vu5yE6bdxEUTVVkMXQ8dP4i-7W2Tyki8D1xXOCGSA3sRA5a5bS07Uz6sNJ_6yEmTzhrvfmWXjd58DBZhyMY0uiJlAbrkJBLpdLIV3IDa0CIbBx5yWQ"
					}				
				}
            }
        },
        "FCAAuthorizerFunctionPermission": {
           "Type": "AWS::Lambda::Permission",
			 "DependsOn": [
                "FCAWebSocket",
                "FCAAuthorizerFunction"
            ],
            "Properties": {
                "Action": "lambda:InvokeFunction",
               "FunctionName": {
				"Fn::GetAtt": [
					"FCAAuthorizerFunction",
					"Arn"
					 ]
				 },
                "Principal": "apigateway.amazonaws.com"
        }
        },
		"FCAAuthorizer": {
			"Type": "AWS::ApiGatewayV2::Authorizer",
			"Properties": {
				"Name": "FCAAuthorizer",
				"ApiId": {
					"Ref": "FCAWebSocket"
				},
				"AuthorizerType": "REQUEST",
				"AuthorizerUri": {"Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FCAAuthorizerFunction.Arn}/invocations"
				},
				"IdentitySource": [
					"route.request.querystring.AuthKey"
				]
			}
		},
        "ConnectRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
                "ApiId": {
                    "Ref": "FCAWebSocket"
                },
                "RouteKey": "$connect",
                "AuthorizationType": "CUSTOM",
                "OperationName": "ConnectRoute",
                "Target": {
                    "Fn::Join": [
                        "/",
                        [
                            "integrations",
                            {
                                "Ref": "ConnectInteg"
                            }
                        ]
                    ]
                },
                "AuthorizerId": {
                    "Ref": "FCAAuthorizer"
                }
            }
        },
        "ConnectInteg": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
                "ApiId": {
                    "Ref": "FCAWebSocket"
                },
                "Description": "Connect Integration",
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations"
                }
            }
        },
        "DisconnectRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
                "ApiId": {
                    "Ref": "FCAWebSocket"
                },
                "RouteKey": "$disconnect",
                "AuthorizationType": "NONE",
                "OperationName": "DisconnectRoute",
                "Target": {
                    "Fn::Join": [
                        "/",
                        [
                            "integrations",
                            {
                                "Ref": "DisconnectInteg"
                            }
                        ]
                    ]
                }
            }
        },
        "DisconnectInteg": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
                "ApiId": {
                    "Ref": "FCAWebSocket"
                },
                "Description": "Disconnect Integration",
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations"
                }
            }
        },
        "Stage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
                "StageName": "Prod",
                "Description": "Prod Stage",
                "DeploymentId": {
                    "Ref": "Deployment"
                },
                "ApiId": {
                    "Ref": "FCAWebSocket"
                }
            }
        },
        "ConnectionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "connectionId",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "connectionId",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                },
                "SSESpecification": {
                    "SSEEnabled": true
                },
                "TableName": {
                    "Ref": "TableName"
                }
            }
        },
        "OnConnectFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "",
                "Handler": "FCA.API::FCAWS.Handler::OnConnect",
                "MemorySize": 256,
				"Timeout": 30,
                "Runtime": "dotnetcore2.1",
                "Environment": {
                    "Variables": {
                        "TABLE_NAME": {
                            "Ref": "TableName"
                        }
                    }
                },
                "Policies": [
                    {
                        "DynamoDBCrudPolicy": {
                            "TableName": {
                                "Ref": "TableName"
                            }
                        }
                    }
                ]
            }
        },
		"OnConnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
                "FCAWebSocket",
                "OnConnectFunction"
            ],
            "Properties": {
                "Action": "lambda:InvokeFunction",
               "FunctionName": {
				"Fn::GetAtt": [
					"OnConnectFunction",
					"Arn"
					 ]
				 },
                "Principal": "apigateway.amazonaws.com"
            }
        },
        "OnDisconnectFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "",
                "Handler": "FCA.API::FCAWS.Handler::OnDisconnect",
                "MemorySize": 256,
				"Timeout": 30,
                "Runtime": "dotnetcore2.1",
                "Environment": {
                    "Variables": {
                        "TABLE_NAME": {
                            "Ref": "TableName"
                        }
                    }
                },
                "Policies": [
                    {
                        "DynamoDBCrudPolicy": {
                            "TableName": {
                                "Ref": "TableName"
                            }
                        }
                    }
                ]
            }
        },
		"OnDisconnectPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
                "FCAWebSocket",
                "OnDisconnectFunction"
            ],
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
				"Fn::GetAtt": [
					"OnDisconnectFunction",
					"Arn"
					 ]
				 },
                "Principal": "apigateway.amazonaws.com"
            }
        },
		"FCAVersionTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                },
                "SSESpecification": {
                    "SSEEnabled": true
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_IMAGE"
                },
                "TableName": {
                    "Ref": "FCAVersion"
                }
            }
        },
		 "CognitoUserPool": {
			"Type": "AWS::Cognito::UserPool",
			"Properties": {
				"MfaConfiguration": "OFF",
				"UserPoolName": "my-websocket",
				"UsernameAttributes": [
					"email"
				],
				"AutoVerifiedAttributes" : [ "email"],
				 "Policies": {
					"PasswordPolicy": {
						"MinimumLength": 6,
						"RequireLowercase": false,
						"RequireNumbers": true,
						"RequireSymbols": false,
						"RequireUppercase": true
						}
					}
			}
		},
		"CognitoUserPoolClient": {
			"Type": "AWS::Cognito::UserPoolClient",
			"Properties": {
				"ClientName": "my-websocket-client",
				"GenerateSecret": false,
				"UserPoolId": {
					"Ref": "CognitoUserPool"
				},
				"ExplicitAuthFlows":[
					"USER_PASSWORD_AUTH"
				],				
				"AllowedOAuthFlows" : ["code"],
				"AllowedOAuthFlowsUserPoolClient" : true,
				"AllowedOAuthScopes" : [ "email","openid" ],
				"CallbackURLs" : [ "https://example.com/"],
				"SupportedIdentityProviders":["COGNITO"]
			}
		},
		"MyApi": {
			"Type": "AWS::Serverless::Api",
			"Properties": {
				"Name": "MyApi",
				"StageName":"Prod",
				"Cors": "'*'",
				"Auth": {
					"DefaultAuthorizer": "MyCognitoAuthorizer",
					"Authorizers": {
						"MyCognitoAuthorizer": {
							"UserPoolArn": {
								"Fn::GetAtt": [
									"CognitoUserPool",
									"Arn"
								]
							}
						}
					}
				}
			}
		},
		"UpdateVersionFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "",
                "Handler": "FCA.API::FCAWS.Handler::UpdateVersion",
                "MemorySize": 256,
				"Timeout": 30,
                "Runtime": "dotnetcore2.1",
                "Policies": [
                    {
                        "DynamoDBCrudPolicy": {
                            "TableName": {
                                "Ref": "FCAVersion"
                            }
                        }
                    }
                ],
				"Events": {
					"ApiResource": {
						"Type": "Api",
						"Properties": {
							"Path": "/updateVersion",
							"Method": "POST",
							 "RestApiId": {
								"Ref": "MyApi"
							}
						}
					}
				}
            }
        },
		"StreamReceiverFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "CodeUri": "",
                "Handler": "FCA.API::FCAWS.Handler::StreamReceiver",
                "MemorySize": 256,
				"Timeout": 30,
                "Runtime": "dotnetcore2.1",
				"Environment":{
					"Variables":{
						"ServiceURL":"https://ocrkquup9e.execute-api.us-east-1.amazonaws.com/Prod"
					}
				},
                "Policies": [
                    {
                        "DynamoDBCrudPolicy": {
                            "TableName": {
                                "Ref": "TableName"
                            }
                        }
                    },
					{
                        "DynamoDBCrudPolicy": {
                            "TableName": {
                                "Ref": "FCAVersion"
                            }
                        }
                    },
					{
					"Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:DescribeStream",
                                        "dynamodb:GetRecords",
                                        "dynamodb:GetShardIterator",
                                        "dynamodb:ListStreams"
                                    ],
                                    "Resource": "*"
                                },
								{
                                "Effect": "Allow",
                                "Action": [
                                    "execute-api:ManageConnections"
                                ],
                                "Resource": [
                                     {
                                        "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ConnectionsTable}"
									 },
									 {
                                        "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${FCAWebSocket}/*"
								     }
                                ]
                            }
                            ]
							}
                ]
            }
		},
		"FCAVersionTableStream": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 1,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::GetAtt": [
                        "FCAVersionTable",
                        "StreamArn"
                    ]
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "StreamReceiverFunction",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST"
            }
        },
        "Deployment": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
                "ConnectRoute",
                "DisconnectRoute"
            ],
            "Properties": {
                "ApiId": {
                    "Ref": "FCAWebSocket"
                }
            }
        }
	},
	"Outputs" : {
		"ApiURL" : {
			"Description" : "API endpoint URL for Prod environment",
			"Value" : { "Fn::Sub" : "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/" }
		},
		"S3ProxyBucket" : {
			"Value" : { "Fn::If" : ["CreateS3Bucket", {"Ref":"Bucket"}, { "Ref" : "BucketName" } ] }
		},
		"ConnectionsTableArn": {
            "Description": "Connections table ARN",
            "Value": {
                "Fn::GetAtt": [
                    "ConnectionsTable",
                    "Arn"
                ]
            }
        },
		"FCAVersionTableArn": {
            "Description": "FCA Version table ARN",
            "Value": {
                "Fn::GetAtt": [
                    "FCAVersionTable",
                    "Arn"
                ]
            }
        },
		"OnConnectFunctionArn": {
            "Description": "OnConnect function ARN",
            "Value": {
                "Fn::GetAtt": [
                    "OnConnectFunction",
                    "Arn"
                ]
            }
        },
        "OnDisconnectFunctionArn": {
            "Description": "OnDisconnect function ARN",
            "Value": {
                "Fn::GetAtt": [
                    "OnDisconnectFunction",
                    "Arn"
                ]
            }
        },
        "UpdateVersionFunctionArn": {
            "Description": "Update Version Function Arn",
            "Value": {
                "Fn::GetAtt": [
                    "UpdateVersionFunction",
                    "Arn"
                ]
            }
        },
		"FCAWebSocketURI": {
            "Description": "The WSS Protocol URI to connect to",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "wss://",
                        {
                            "Ref": "FCAWebSocket"
                        },
                        ".execute-api.",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".amazonaws.com/",
                        {
                            "Ref": "Stage"
                        }
                    ]
                ]
            }
        }
	}
}